require("navGo_pathfinding.Handler.a_star_core")

local function move2(self)
	local path = NAVGO.GENERATE_PATH_TO_RANDOM_NODE(go.get_id())
	local delay = 0
	if path ~= nil then
		for i=1, #path do
			go.animate(go.get_id(), "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(path[i].x, path[i].y, 1), go.EASING_LINEAR, 1, delay)
			delay = delay + 1
		end
		timer.delay(delay, false, move2)
	end
end

local function MoveCharacter(self, path)
	local delay = 0
	for i=1, #path do
		go.animate(go.get_id(), "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(path[i].x, path[i].y, 1), go.EASING_LINEAR, 1, delay)
		delay = delay + 1
	end
	timer.delay(delay, false, move2)
end

local function InitMoveCharacter(self)
	local path = NAVGO.GENERATE_PATH(go.get_id("/NavGO_NodeGO1"), go.get_id())
	MoveCharacter(self, path)
end


------------------
--Core Functions--
------------------

function init(self)
	timer.delay(1, false, InitMoveCharacter)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		if message.group == hash("wall") then
			local newpos = go.get_position() + message.normal * message.distance
			go.set_position(newpos)
		end
	end
end
